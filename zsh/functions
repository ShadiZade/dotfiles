#!/bin/zsh
##################################################################################################
#
#					 ____  _   _    _    ____ ___     _____   _    ____  _____ 
#					/ ___|| | | |  / \  |  _ \_ _|   |__  /  / \  |  _ \| ____|
#					\___ \| |_| | / _ \ | | | | |_____ / /  / _ \ | | | |  _|  
#					 ___) |  _  |/ ___ \| |_| | |_____/ /_ / ___ \| |_| | |___ 
#					|____/|_| |_/_/   \_\____/___|   /____/_/   \_\____/|_____|
#
#					https://github.com/ShadiZade
#					functions
#					zsh functions
#
###################################################################################################
####### symlink location: ~/.config/zsh/ ##########################################################
## terminal-art
source ~/Repositories/dotfiles/zsh/aliases
source ~/Misc/Backups/private-scripts/private-aliases.sh 
source ~/Repositories/scripts/essential-functions.sh

terminal-art () {
    touch ~/.qotd ~/.today-date
    [ "$(cat ~/.today-date)" = "$(date +%m-%d)" ] ||\
	(date +"%m-%d" > ~/.today-date
	 fortune marxism > ~/.qotd)    
    ~/Repositories/communist-calendar/fetch-events.sh
    cat ~/.qotd | cowsay -f none -W 140
}

## disown
run_disowned () {
    "$@" & disown
}
rdo () {
    run_disowned "$@" 1>/dev/null 2>/dev/null
}

## bigdate
bd () {
    date +"%Y%m%d%H%M"
}

## pg
pg () {
    i=1
    while true;
    do echo -e "\033[31m:: Attempting...\033[0m ($i)"
       ping -qc 1 baidu.com && break
       i=$((i+1))
       sleep 3
    done
}

## a
a () {
    mpv --no-audio-display "$@"
}

## v
v () {
    rdo mpv --audio-samplerate=88200 "$@"
}

## xv
xv () {
    [ -z "$1" ] && location_se="$(pwd)" || location_se="$1"
    images="$(fd -H 'jpg$|jpeg$|png$|gif$|webp$|jxl$|jpg_large$|svg$|tif$' -d 1 "$location_se" | sed 's/ /\\ /g' | sort -V)"
    [ -z "$images" ] && echolor yellow ":: No images found in this directory." || echo "$images" | xargs sxiv
}

## xt
xt () {
    fd -qH "$1" || echolor yellow ":: No results."
    fd -qH "$1" && fd "$1" | xargs sxiv
}

## xpa
xpa () {
    pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'
}

## xpt
xpt () {
    [ -z "$1" ] && numpack="12" || numpack="$1"
    expac --timefmt='%Y-%m-%d %T' "%l\t%n-%v\t%w" | sort | grep explicit | sed 's/explicit//g' | tail -n "$numpack" 
}

## xpta
xpta () {
    [ -z "$1" ] && numpack="12" || numpack="$1"
    expac --timefmt='%Y-%m-%d %T' "%l\t%n-%v" | sort | tail -n "$numpack"
}

## key-names
key-names () {
	xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf "%-3s %s\n", $5, $8 }'
}    

## alarm
alarm () {
    echo -e "\033[33m:: Alarm set on $(date +%H:%M:%S) for $1\033[0m"
    sleep "$1"; mpv --loop-file=inf /usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga
}

## knock
knock () {
    [ -z "$1" ] && knocker="URLLink.acsm" || knocker="$1"
    ~/.local/share/installed-scripts/knock/.knock/knock "$knocker"
}

## kbb
kbb () {
    ~/Repositories/scripts/kebabization.sh "$@"
    cat ~/.kebab | xclip -selection clipboard
    cat ~/.kebab
}

## mkk
mkk () {
    ~/Repositories/scripts/kebabization.sh "$1"
    mkdir -pv $(cat ~/.kebab)
}

## delete-opf
delete-opf () {
    [ "$(pwd)" = "$HOME/Books/add" ] || return
    fd -q 'opf$' && rt *.opf || echo -e "\033[33m:: No .opf files to delete.\033[0m"
    fd -q 'jpg$' && rt *.jpg || echo -e "\033[33m:: No .jpg files to delete.\033[0m"
}

## detect-extra
detect-extra () {
    extra_dirs_exist=""
    extra_dirs="$(diff <(ls -1 ~) <(cat ~/Misc/home-dirs) | tail -n +2 | tr '\n' ',' | sed 's/< //g;s/,$//g;s/,/ - /g')"
    [ -z "$extra_dirs" ] && return
    echo -e "\033[31m:: Extra dirs (\033[33m$extra_dirs\033[31m) exist in ~.\033[0m"
    extra_dirs_exist="y"
}
## k
k () {
    ~/Repositories/scripts/mpv-done.sh "$1"
}
## ..c
..c () {
    git add .
    git commit -m $(bd)
    tok
}

## dr
dr () {
    ext="$(echo "$1" | awk -F '.' '{print $NF}' | awk -F '?' '{print $1}')"
    [ -z "$2" ] || ext="$2"
    name_string="$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13)"
    [ -z "$3" ] || name_string="$3"
    wget -O "$name_string"."$ext" "$1" && xdg-open "$name_string"."$ext"
}

## lv
lv () {
    echo -e "\033[33m:: Showing a live feed of $(pwd | sed "s|$HOME|~|")\033[0m"
    while true; do
	lln
	sleep 1s
	tput cuu $(lln | wc -l)
    done
}
## wg
wg () {
    [[ -z "$2" ]] && wget -t 0 -- "$1" || wget -O "$2" -t 0 -- "$1"
}

## netc
netc () {
    nmcli device disconnect wlp4s0
    sleep 1s
    echo -e "\033[33m:: Connecting to $DEFAULT_WIFI_NETWORK\033[0m"
    nmcli device wifi connect "$DEFAULT_WIFI_NETWORK"
}

## cat-donefiles
cat-donefiles () {
    echo -e "$(cat * | sed 's/^/\\033[4\;37m/g;s/ is done on /\\033[0m is done on \\033[33m/g;s/$/\\033[0m/g')"
}

## fzf-choose-directory
fzf-choose-directory () {
    dir_list="$(eza $hide_flag -1D --no-quotes)"
    [ -z "$dir_list" ] \
	&& echo -e "\033[33m:: No directories.\033[0m" \
	&& return
    chosen_dir="$(echo "$dir_list" | fzf)"
    [ -z "$chosen_dir" ] \
	&& echo -e "\033[33m:: Nothing done.\033[0m" \
	&& return
    cd "$chosen_dir"
}


## ff
ff () {
    while true
    do
	fzf-choose-directory
	[ -z "$chosen_dir" ] \
	    && break
	[ -z "$(eza $hide_flag -1D)" ] \
	    && break
    done
    ll
}

## submv
submv () {
    [ -z "$1" ] \
	&& whichsub=1 \
	    || whichsub="$1"
    eps=($(eza -1D -I renamed-subs))
    i=1
    mkdir "./renamed-subs"
    while [ "$i" -le "${#eps[@]}" ]; do
	curdir="${eps[$i]}"
	curep="$(eza -1 "$curdir" | tail -n +"$whichsub" | sed 1q)"
	cp "$curdir"/"$curep" ./renamed-subs/"$curdir".en.srt
	((i++))
    done
    echo -e "\033[33m:: Renamed the No. $whichsub subtitle files\033[0m"
}

â€™ () {
    dir="$1"
    [ -z "$1" ] \
	&& dir="."
    fl="$(eza -1f "$dir" | sort | fzf)"
    [ -z "$fl" ] \
	&& echo -e "\033[33m:: Nothing selected.\033[0m" \
	&& return
    file_ext="$(echo "$fl" | awk -F '.' '{print $NF}')"
    fw="$(echo "$dir/$fl")"
    echo -e "\033[33m:: Opening \033[37m$fw\033[0m"
    case "$file_ext" in
	pdf|ps|djvu|epub)
	    rdo zathura "$fw" ;;
	mp3|wav|wmv)
            mpv --no-audio-display "$fw" ;;
	mp4|mkv|ts|webm)
	    rdo mpv --audio-samplerate=88200 "$fw" ;;
	jpg|png|jpeg|svg|jxl|jpeg_large|webp|gif)
	    rdo sxiv "$fw" ;;
	txt|md|org|tex|bib|csv|sh|el|lisp|html|css)
	    bat "$fw" ;;
	*)
	    rdo xdg-open "$fw" ;;
    esac
}

xmm () {
    case "$1" in
	"") pkill kiod5
	    jmtpfs ~/.local/mobile/
	    ;;
	end) cd
	     umount ~/.local/mobile/
	     ;;
	*) echo ":: unknown command"
	   ;;
    esac
}
    
urt () {
    trash_dir="$HOME/.local/share/Trash/files"
    [ -z "$1" ] \
	&& rest_file="$(eza -1 --sort=newest "$trash_dir" | tail -n 1 )" \
	&& echo -e "\033[33m:: Restoring latest file from trash.\033[0m" \
	    || rest_file="$1"
    mv -nv "$trash_dir"/"$rest_file" .

}
