#!/bin/zsh
##################################################################################################
#
#					 ____  _   _    _    ____ ___     _____   _    ____  _____ 
#					/ ___|| | | |  / \  |  _ \_ _|   |__  /  / \  |  _ \| ____|
#					\___ \| |_| | / _ \ | | | | |_____ / /  / _ \ | | | |  _|  
#					 ___) |  _  |/ ___ \| |_| | |_____/ /_ / ___ \| |_| | |___ 
#					|____/|_| |_/_/   \_\____/___|   /____/_/   \_\____/|_____|
#
#					https://github.com/ShadiZade
#					functions
#					zsh functions
#
###################################################################################################
####### symlink location: ~/.config/zsh/ ##########################################################
## terminal-art
terminal-art () {
    touch ~/.qotd ~/.today-date
    [ "$(cat ~/.today-date)" = "$(date +%m-%d)" ] ||\
	(date +"%m-%d" > ~/.today-date
	 fortune marxism > ~/.qotd)    
    ~/Repositories/communist-calendar/fetch-events.sh
    cat ~/.qotd | cowsay -f none -W 140
}

## disown
function run_disowned() {
    "$@" & disown
}
function rdo() {
    # run_disowned and silenced

    run_disowned "$@" 1>/dev/null 2>/dev/null
}

## bigdate
bd () {
    date +"%Y%m%d%H%M"
}

## pg
pg () {
    i=1
    while true;
    do echo -e "\033[31m:: Attempting...\033[0m ($i)"
       ping -qc 1 gnu.org && break
       i=$((i+1))
       sleep 3
    done
}

## a
a () {
    mpv --no-audio-display "$@"
}

## v
v () {
    rdo mpv --audio-samplerate=88200 "$@"
}

## xv
xv () {
    [ -z "$1" ] && location_se='.' || location_se="$1"
    images="$(fd 'jpg$|jpeg$|png$|gif$|webp$|jxl$|jpg_large$|svg$' -d 1 $location_se | sed 's/ /\\ /g' | sort -V)"
    [ -z "$images" ] && echo "No images found in this directory." || echo "$images" | xargs sxiv
}

## xt
xt () {
    fd -q "$1" || echo "No results."
    fd -q "$1" && fd "$1" | xargs sxiv
}

## xpa
xpa () {
    pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'
}

## xpt
xpt () {
    [ -z "$1" ] && numpack="12" || numpack="$1"
    expac --timefmt='%Y-%m-%d %T' "%l\t%n-%v\t%w" | sort | grep explicit | sed 's/explicit//g' | tail -n "$numpack" 
}

## xpta
xpta () {
    [ -z "$1" ] && numpack="12" || numpack="$1"
    expac --timefmt='%Y-%m-%d %T' "%l\t%n-%v" | sort | tail -n "$numpack"
}

## key-names
key-names () {
	xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf "%-3s %s\n", $5, $8 }'
}    

## alarm
alarm () {
    echo -e "\033[33m:: Alarm set on $(date +%H:%M:%S) for $1\033[0m"
    sleep "$1"; mpv --loop-file=inf /usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga
}

## knock
knock () {
    [ -z "$1" ] && knocker="URLLink.acsm" || knocker="$1"
    ~/.local/share/installed-scripts/knock/.knock/knock "$knocker"
}

## kebab
kebab () {
    ~/Repositories/scripts/kebabization.sh "$1"
    cat ~/.kebab | xclip -selection clipboard
    cat ~/.kebab
}

## mkk
mkk () {
    ~/Repositories/scripts/kebabization.sh "$1"
    mkdir -pv $(cat ~/.kebab)
}

## delete-opf
delete-opf () {
    [ "$(pwd)" = "$HOME/Books/add" ] || return
    fd -q 'opf$' && rt *.opf || echo -e "\033[33m:: No .opf files to delete.\033[0m"
    fd -q 'jpg$' && rt *.jpg || echo -e "\033[33m:: No .jpg files to delete.\033[0m"
}

## detect-extra
detect-extra () {
    extra_dirs_exist=""
    extra_dirs="$(diff <(ls -1 ~) <(cat ~/Misc/home-dirs) | tail -n +2 | tr '\n' ',' | sed 's/< //g;s/,$//g;s/,/ - /g')"
    [ -z "$extra_dirs" ] && return
    echo -e "\033[31m:: Extra dirs (\033[33m$extra_dirs\033[31m) exist in ~.\033[0m"
    extra_dirs_exist="y"
}
## k
k () {
    ~/Repositories/scripts/mpv-done.sh "$1"
}
## ..c
..c () {
    git add .
    git commit -m $(bd)
    tok
}

## gv
gv () {
    working="$1"
    [ -z "$working" ] && echo -e "\033[31m:: Missing argument!\033[0m" && return
    [ "$(file --extension "$working" | awk -F ': ' '{print $NF}')" != "gif" ] && echo -e "\033[31m:: Not a GIF!\033[0m" && return
    working="$(echo "$working" | sed 's/\.gif$//g')"
    ffmpeg -i "$1" -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" "$working".mp4
    mpv "$working".mp4
    agreedel="$(echo -e "yes\nno" | fzf --prompt='Delete original? ')"
    [ "$agreedel" = "yes" ] && rm -vf "$1"
}
